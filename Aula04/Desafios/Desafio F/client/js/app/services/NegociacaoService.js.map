{"version":3,"sources":["../../app-es2015/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","all","obterNegociacoesDaSemana","obterNegociacoesAnterior","obterNegociacoesRetrasada","periodo","reduce","arrayAchatado","array","concat","erro"],"mappings":";;;;;;IAAMA,iB;AAEF,iCAAc;AAAA;;AACV,aAAKC,KAAL,GAAa,IAAIC,WAAJ,EAAb;AACH;;;;mDAE0B;AAAA;;AACvB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,sBAAKJ,KAAL,CACKK,GADL,CACS,0CADT,EAEKC,IAFL,CAEU,uBAAe;AACjBH,4BACII,YAAYC,GAAZ,CAAgB;AAAA,+BAAU,IAAIC,UAAJ,CACtB,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CADsB,EACCD,OAAOE,UADR,EACoBF,OAAOG,KAD3B,CAAV;AAAA,qBAAhB,CADJ;AAIH,iBAPL,EAQKC,KARL,CAQW,gBAAQ;AACXX,2BAAO,iDAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;mDAE0B;AAAA;;AACvB,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKJ,KAAL,CACKK,GADL,CACS,4CADT,EAEKC,IAFL,CAEU,uBAAe;AACjBH,4BACII,YAAYC,GAAZ,CAAgB;AAAA,+BAAU,IAAIC,UAAJ,CACtB,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CADsB,EACCD,OAAOE,UADR,EACoBF,OAAOG,KAD3B,CAAV;AAAA,qBAAhB,CADJ;AAIH,iBAPL,EAQKC,KARL,CAQW,gBAAQ;AACXX,2BAAO,0DAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;oDAE2B;AAAA;;AACxB,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKJ,KAAL,CACKK,GADL,CACS,6CADT,EAEKC,IAFL,CAEU,uBAAe;AACjBH,4BACII,YAAYC,GAAZ,CAAgB;AAAA,+BAAU,IAAIC,UAAJ,CACtB,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CADsB,EACCD,OAAOE,UADR,EACoBF,OAAOG,KAD3B,CAAV;AAAA,qBAAhB,CADJ;AAIH,iBAPL,EAQKC,KARL,CAQW,gBAAQ;AACXX,2BAAO,2DAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;2CAEkB;AAAA;;AACf,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCF,wBAAQc,GAAR,CAAY,CACR,OAAKC,wBAAL,EADQ,EAER,OAAKC,wBAAL,EAFQ,EAGR,OAAKC,yBAAL,EAHQ,CAAZ,EAIGb,IAJH,CAIQ,mBAAW;AACf,wBAAIC,cAAea,QACdC,MADc,CACP,UAACC,aAAD,EAAgBC,KAAhB;AAAA,+BAA0BD,cAAcE,MAAd,CAAqBD,KAArB,CAA1B;AAAA,qBADO,EACgD,EADhD,EAEdf,GAFc,CAEV;AAAA,+BAAU,IAAIC,UAAJ,CACX,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CADW,EACYD,OAAOE,UADnB,EAC+BF,OAAOG,KADtC,CAAV;AAAA,qBAFU,CAAnB;AAIAX,4BAAQI,WAAR;AACH,iBAVD,EAWKQ,KAXL,CAWW,gBAAQ;AACXX,2BAAOqB,IAAP;AACH,iBAbL;AAcH,aAfM,CAAP;AAgBH","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('http://localhost:3000/negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(\r\n                        negociacoes.map(objeto => new Negociacao(\r\n                            new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    )\r\n                })\r\n                .catch(erro => {\r\n                    reject('Não foi possível obter as negociações da semana')\r\n                })\r\n        })\r\n    }\r\n\r\n    obterNegociacoesAnterior() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('http://localhost:3000/negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(\r\n                        negociacoes.map(objeto => new Negociacao(\r\n                            new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    )\r\n                })\r\n                .catch(erro => {\r\n                    reject('Não foi possível obter as negociações da semana anterior')\r\n                })\r\n        })\r\n    }\r\n\r\n    obterNegociacoesRetrasada() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('http://localhost:3000/negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(\r\n                        negociacoes.map(objeto => new Negociacao(\r\n                            new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    )\r\n                })\r\n                .catch(erro => {\r\n                    reject('Não foi possível obter as negociações da semana retrasada')\r\n                })\r\n        })\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesAnterior(),\r\n                this.obterNegociacoesRetrasada()\r\n            ]).then(periodo => {\r\n                let negociacoes  = periodo\r\n                    .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n                    .map(objeto => new Negociacao(\r\n                        new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                resolve(negociacoes);\r\n            })\r\n                .catch(erro => {\r\n                    reject(erro);\r\n                });\r\n        })\r\n    }\r\n}"]}